name: lo build test

on:
  repository_dispatch:

jobs:

  build:
    name: ${{ github.event.client_payload.device }}
    runs-on: ubuntu-18.04
    env:
      DEVICE: ${{github.event.client_payload.device}}

    if: github.event.repository.owner.id == github.event.sender.id

    steps:

      - name: Space cleanup
        run: |
          sudo sysctl vm.swappiness=0
          nohup sudo rm -rf /usr/share/dotnet /usr/local/lib/android/sdk &
          sudo -E apt update
          nohup sudo -E apt -y install pv aria2 build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync &

      - name: Checkout
        run: |
          for i in {0..5}
          do
           curl -s -L --fail https://github.com/klever1988/lede/releases/download/cache/lede.$DEVICE.img.zst.0$i || break
          done | zstdmt -d -o lede.img || (truncate -s 40g lede.img && mkfs.btrfs -M lede.img)
          LOOP_DEVICE=$(losetup -f) && echo "LOOP_DEVICE=$LOOP_DEVICE" >> $GITHUB_ENV
          sudo losetup -P --direct-io $LOOP_DEVICE lede.img
          mkdir lede && sudo mount -o nossd,compress=zstd $LOOP_DEVICE lede
          [ ! -d 'lede/.git' ] && sudo chown -R $USER:$(id -gn) lede && (cd lede && git init && git remote add -t master -f origin https://github.com/${{ github.repository }} && git checkout master)
          cd lede && rm -f zerospace && git fetch && git reset --hard origin/master

      - name: Update feeds
        run: |
          cd lede
          sed -i 's/#src-git helloworld/src-git helloworld/g' feeds.conf.default
          git clone -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git
          rm -rf package/lean/luci-theme-argon && mv luci-theme-argon package/lean/
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Prepare to build
        run: |
          cd lede
          rm -f .config*
          cat $DEVICE.config.seed | grep -i target > .config
          echo 'CONFIG_ALL=y' >> .config

          make defconfig
          #sed -i '/INCLUDE/!s/# \(CONFIG_PACKAGE_luci-app-.*\) is not set/\1=m/' .config
          #make defconfig
          #cat .config

      - name: Compile firmware
        run: |
          cd lede
          while true; do make download -j && break || true; done
          make -j$[`nproc`+1] || make V=sc
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: |
          make clean
          cd ..
          sleep 60
          sudo mount -o remount,compress=no,nodatacow,nodatasum lede
          cd lede/; pv /dev/zero > zerospace || true; sync; rm -f zerospace; cd -
          sleep 60
          sudo umount lede
          sudo losetup -d $LOOP_DEVICE
          zstdmt -c --long lede.img | split -d -b 2000m - lede.$DEVICE.img.zst.

      - name: Upload cache asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./lede.$DEVICE*zst*
          tag: cache
          file_glob: true
          overwrite: true
          prerelease: true

      - name: Start SSH via tmate
        uses: P3TERX/ssh2actions@main
        if: ${{ failure() }}
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

      - name: Send tg notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          args: The $DEVICE build is finished at ${{ job.status }}.
